;
;#include <delay.h>
;
;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;void initial(void);
;
;
;
;unsigned char led =0;
;
;// Declare your global variables here
;
;
;
;void main(void)
; 0000 0013 
; 0000 0014 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0015 
; 0000 0016 // Declare your local variables here
; 0000 0017 
; 0000 0018 
; 0000 0019 
; 0000 001A initial();
;PCODE: $0000000E VOL: 0
; 0000 001B 
; 0000 001C led = 0x00;
;PCODE: $0000000F VOL: 0
; 0000 001D 
; 0000 001E DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0); //0,1,2´Â Ãâ·Â(led)
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001F 
; 0000 0020 PORTA = led; //Ã¹¹øÂ° led¸¦ ÄÒ´Ù.
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0021 
; 0000 0022 
; 0000 0023 
; 0000 0024     while (1)
;PCODE: $00000014 VOL: 0
; 0000 0025 
; 0000 0026       {
; 0000 0027 
; 0000 0028        if(PINA.3 == 0){
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0029 
; 0000 002A 
; 0000 002B 
; 0000 002C             led = led+1;
;PCODE: $00000018 VOL: 0
; 0000 002D            // led = led|=0x01;
; 0000 002E 
; 0000 002F             led = led & 0x0F;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0030 
; 0000 0031 
; 0000 0032 
; 0000 0033                   if(led == 0x09){
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0034 
; 0000 0035                         led = 0x01;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0036 
; 0000 0037                   }
; 0000 0038 
; 0000 0039 
; 0000 003A 
; 0000 003B              PORTA = led;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003C 
; 0000 003D              delay_ms(500);//ÀÔ·Â ÈÄ µô·¹ÀÌ¸¦ Áà¼­ ¼Óµµ¸¦ ³·Ãß´Â ´À³¦.... ESCÅ° ³îÀÌ¸¦ »ý°¢ÇØº¾½Ã´Ù.
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003E 
; 0000 003F       }
; 0000 0040 
; 0000 0041 }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0042 
; 0000 0043 
; 0000 0044 
; 0000 0045 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;
;
;void initial(void){
; 0000 0049 void initial(void){
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004A 
; 0000 004B // Input/Output Ports initialization
; 0000 004C 
; 0000 004D // Port A initialization
; 0000 004E 
; 0000 004F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0050 
; 0000 0051 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0052 
; 0000 0053 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0054 
; 0000 0055 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0056 
; 0000 0057 
; 0000 0058 
; 0000 0059 // Port B initialization
; 0000 005A 
; 0000 005B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 005C 
; 0000 005D DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005E 
; 0000 005F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0060 
; 0000 0061 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0062 
; 0000 0063 
; 0000 0064 
; 0000 0065 // Port C initialization
; 0000 0066 
; 0000 0067 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0068 
; 0000 0069 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 006A 
; 0000 006B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 006C 
; 0000 006D PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 006E 
; 0000 006F 
; 0000 0070 
; 0000 0071 // Port D initialization
; 0000 0072 
; 0000 0073 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0074 
; 0000 0075 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0076 
; 0000 0077 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0078 
; 0000 0079 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 007A 
; 0000 007B 
; 0000 007C 
; 0000 007D // Port E initialization
; 0000 007E 
; 0000 007F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0080 
; 0000 0081 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0082 
; 0000 0083 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0084 
; 0000 0085 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0086 
; 0000 0087 
; 0000 0088 
; 0000 0089 // Port F initialization
; 0000 008A 
; 0000 008B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 008C 
; 0000 008D DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 008E 
; 0000 008F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0090 
; 0000 0091 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0092 
; 0000 0093 
; 0000 0094 
; 0000 0095 // Port G initialization
; 0000 0096 
; 0000 0097 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0098 
; 0000 0099 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 009A 
; 0000 009B // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 009C 
; 0000 009D PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 009E 
; 0000 009F 
; 0000 00A0 
; 0000 00A1 // Timer/Counter 0 initialization
; 0000 00A2 
; 0000 00A3 // Clock source: System Clock
; 0000 00A4 
; 0000 00A5 // Clock value: Timer 0 Stopped
; 0000 00A6 
; 0000 00A7 // Mode: Normal top=0xFF
; 0000 00A8 
; 0000 00A9 // OC0 output: Disconnected
; 0000 00AA 
; 0000 00AB ASSR=0<<AS0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 00AC 
; 0000 00AD TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 00AE 
; 0000 00AF TCNT0=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 00B0 
; 0000 00B1 OCR0=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 00B2 
; 0000 00B3 
; 0000 00B4 
; 0000 00B5 // Timer/Counter 1 initialization
; 0000 00B6 
; 0000 00B7 // Clock source: System Clock
; 0000 00B8 
; 0000 00B9 // Clock value: Timer1 Stopped
; 0000 00BA 
; 0000 00BB // Mode: Normal top=0xFFFF
; 0000 00BC 
; 0000 00BD // OC1A output: Disconnected
; 0000 00BE 
; 0000 00BF // OC1B output: Disconnected
; 0000 00C0 
; 0000 00C1 // OC1C output: Disconnected
; 0000 00C2 
; 0000 00C3 // Noise Canceler: Off
; 0000 00C4 
; 0000 00C5 // Input Capture on Falling Edge
; 0000 00C6 
; 0000 00C7 // Timer1 Overflow Interrupt: Off
; 0000 00C8 
; 0000 00C9 // Input Capture Interrupt: Off
; 0000 00CA 
; 0000 00CB // Compare A Match Interrupt: Off
; 0000 00CC 
; 0000 00CD // Compare B Match Interrupt: Off
; 0000 00CE 
; 0000 00CF // Compare C Match Interrupt: Off
; 0000 00D0 
; 0000 00D1 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 00D2 
; 0000 00D3 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 00D4 
; 0000 00D5 TCNT1H=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 00D6 
; 0000 00D7 TCNT1L=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 00D8 
; 0000 00D9 ICR1H=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00DA 
; 0000 00DB ICR1L=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 00DC 
; 0000 00DD OCR1AH=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 00DE 
; 0000 00DF OCR1AL=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00E0 
; 0000 00E1 OCR1BH=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00E2 
; 0000 00E3 OCR1BL=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00E4 
; 0000 00E5 OCR1CH=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00E6 
; 0000 00E7 OCR1CL=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00E8 
; 0000 00E9 
; 0000 00EA 
; 0000 00EB // Timer/Counter 2 initialization
; 0000 00EC 
; 0000 00ED // Clock source: System Clock
; 0000 00EE 
; 0000 00EF // Clock value: Timer2 Stopped
; 0000 00F0 
; 0000 00F1 // Mode: Normal top=0xFF
; 0000 00F2 
; 0000 00F3 // OC2 output: Disconnected
; 0000 00F4 
; 0000 00F5 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00F6 
; 0000 00F7 TCNT2=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00F8 
; 0000 00F9 OCR2=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00FA 
; 0000 00FB 
; 0000 00FC 
; 0000 00FD // Timer/Counter 3 initialization
; 0000 00FE 
; 0000 00FF // Clock source: System Clock
; 0000 0100 
; 0000 0101 // Clock value: Timer3 Stopped
; 0000 0102 
; 0000 0103 // Mode: Normal top=0xFFFF
; 0000 0104 
; 0000 0105 // OC3A output: Disconnected
; 0000 0106 
; 0000 0107 // OC3B output: Disconnected
; 0000 0108 
; 0000 0109 // OC3C output: Disconnected
; 0000 010A 
; 0000 010B // Noise Canceler: Off
; 0000 010C 
; 0000 010D // Input Capture on Falling Edge
; 0000 010E 
; 0000 010F // Timer3 Overflow Interrupt: Off
; 0000 0110 
; 0000 0111 // Input Capture Interrupt: Off
; 0000 0112 
; 0000 0113 // Compare A Match Interrupt: Off
; 0000 0114 
; 0000 0115 // Compare B Match Interrupt: Off
; 0000 0116 
; 0000 0117 // Compare C Match Interrupt: Off
; 0000 0118 
; 0000 0119 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 011A 
; 0000 011B TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 011C 
; 0000 011D TCNT3H=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 011E 
; 0000 011F TCNT3L=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0120 
; 0000 0121 ICR3H=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0122 
; 0000 0123 ICR3L=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0124 
; 0000 0125 OCR3AH=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0126 
; 0000 0127 OCR3AL=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0128 
; 0000 0129 OCR3BH=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 012A 
; 0000 012B OCR3BL=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 012C 
; 0000 012D OCR3CH=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 012E 
; 0000 012F OCR3CL=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0130 
; 0000 0131 
; 0000 0132 
; 0000 0133 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0134 
; 0000 0135 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0136 
; 0000 0137 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0138 
; 0000 0139 
; 0000 013A 
; 0000 013B // External Interrupt(s) initialization
; 0000 013C 
; 0000 013D // INT0: Off
; 0000 013E 
; 0000 013F // INT1: Off
; 0000 0140 
; 0000 0141 // INT2: Off
; 0000 0142 
; 0000 0143 // INT3: Off
; 0000 0144 
; 0000 0145 // INT4: Off
; 0000 0146 
; 0000 0147 // INT5: Off
; 0000 0148 
; 0000 0149 // INT6: Off
; 0000 014A 
; 0000 014B // INT7: Off
; 0000 014C 
; 0000 014D EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 014E 
; 0000 014F EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0150 
; 0000 0151 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0152 
; 0000 0153 
; 0000 0154 
; 0000 0155 // USART0 initialization
; 0000 0156 
; 0000 0157 // USART0 disabled
; 0000 0158 
; 0000 0159 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 015A 
; 0000 015B 
; 0000 015C 
; 0000 015D // USART1 initialization
; 0000 015E 
; 0000 015F // USART1 disabled
; 0000 0160 
; 0000 0161 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0162 
; 0000 0163 
; 0000 0164 
; 0000 0165 // Analog Comparator initialization
; 0000 0166 
; 0000 0167 // Analog Comparator: Off
; 0000 0168 
; 0000 0169 // The Analog Comparator's positive input is
; 0000 016A 
; 0000 016B // connected to the AIN0 pin
; 0000 016C 
; 0000 016D // The Analog Comparator's negative input is
; 0000 016E 
; 0000 016F // connected to the AIN1 pin
; 0000 0170 
; 0000 0171 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0172 
; 0000 0173 SFIOR=(0<<ACME);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0174 
; 0000 0175 
; 0000 0176 
; 0000 0177 // ADC initialization
; 0000 0178 
; 0000 0179 // ADC disabled
; 0000 017A 
; 0000 017B ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 017C 
; 0000 017D 
; 0000 017E 
; 0000 017F // SPI initialization
; 0000 0180 
; 0000 0181 // SPI disabled
; 0000 0182 
; 0000 0183 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0184 
; 0000 0185 
; 0000 0186 
; 0000 0187 // TWI initialization
; 0000 0188 
; 0000 0189 // TWI disabled
; 0000 018A 
; 0000 018B TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 018C 
; 0000 018D }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
