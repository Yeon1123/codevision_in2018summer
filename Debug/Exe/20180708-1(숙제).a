;
;#include <delay.h>
;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void init(void);
;
;unsigned char led = 0x01;
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D PORTA = PORTA | led;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E 
; 0000 000F }
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0013 {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0014  PORTA = PORTA & !led;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0015 
; 0000 0016 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;
;void main(void)
; 0000 0019 {
;PCODE: $00000020 VOL: 0
; 0000 001A //switch 눌린거 확인용 flag
; 0000 001B int button1_flag = 0;
; 0000 001C int button2_flag = 0;
; 0000 001D int button3_flag = 0;
; 0000 001E 
; 0000 001F //2번 스위치용 flag
; 0000 0020 int flag = 0;
; 0000 0021 int direction_flag = 0;
; 0000 0022 
; 0000 0023 //이전 함수 돌아가기용 flag
; 0000 0024 int stop = 0;
; 0000 0025 
; 0000 0026 init();
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;	button1_flag -> R16,R17
;	button2_flag -> R18,R19
;	button3_flag -> R20,R21
;	flag -> Y+4
;	direction_flag -> Y+2
;	stop -> Y+0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0027 OCR0 = 255;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0028 PORTA = led;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0029 
; 0000 002A 
; 0000 002B 
; 0000 002C #asm("sei")
;PCODE: $00000039 VOL: 0
	sei
;PCODE: $0000003A VOL: 0
; 0000 002D 
; 0000 002E    while (1)
;PCODE: $0000003B VOL: 0
; 0000 002F {
; 0000 0030 
; 0000 0031    if (!(PINA.3)) {
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0032       if (button1_flag == 1)
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0033          button1_flag = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0034 
; 0000 0035       else
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0036       {
; 0000 0037          button1_flag = 1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0038          button2_flag = 0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0039       }
;PCODE: $0000004A VOL: 0
; 0000 003A 
; 0000 003B       delay_ms(500);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003C    }
; 0000 003D 
; 0000 003E 
; 0000 003F    if (!(PINA.4)) {
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0040       if (button2_flag == 1)
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0041          button2_flag = 0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0042       else
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0043       {
; 0000 0044 
; 0000 0045          button1_flag = 0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0046          button2_flag = 1;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0047       }
;PCODE: $0000005C VOL: 0
; 0000 0048 
; 0000 0049       delay_ms(500);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 004A    }
; 0000 004B 
; 0000 004C 
; 0000 004D    if (!(PINA.5)) {
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 004E       if (button3_flag == 1)
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004F          button3_flag = 0;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0050 
; 0000 0051       else
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0052       {
; 0000 0053          button3_flag = 1;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0054       }
;PCODE: $0000006C VOL: 0
; 0000 0055 
; 0000 0056       delay_ms(500);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0057    }
; 0000 0058 
; 0000 0059 
; 0000 005A    if (button1_flag == 1){
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 005B 
; 0000 005C          OCR0 = 255;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 005D 
; 0000 005E           if(stop == 1){
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 005F                 PORTA = PORTA;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0060          }
; 0000 0061 
; 0000 0062          else if(stop == 0){
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0063 
; 0000 0064              if (led >= 8)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0065              led = 0;
;PCODE: $00000082 VOL: 0
; 0000 0066 
; 0000 0067              led ++;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0068              PORTA |= led;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0069              delay_ms(500);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 006A             }
; 0000 006B 
; 0000 006C 
; 0000 006D 
; 0000 006E    }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 006F 
; 0000 0070 else if (button2_flag == 1)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0071  {
; 0000 0072          if(stop == 1){
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0073              OCR0 = OCR0;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0074          }
; 0000 0075 
; 0000 0076         else if(stop == 0){
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0077 
; 0000 0078             if(flag == 0) //2번 버튼을 처음 눌렀을때만 실행된다!
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0079             {
; 0000 007A                 OCR0 = 0; flag =1; led = 0x01;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 007B             }
; 0000 007C 
; 0000 007D 
; 0000 007E             if (direction_flag == 0)  //플래그 확인하고 올릴지 말지 결정하기!
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 007F             {
; 0000 0080                 OCR0++;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0081                 delay_ms(10);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0082             }
; 0000 0083 
; 0000 0084             else
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0085             {
; 0000 0086                 OCR0--;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0087                 delay_ms(10);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0088             }
;PCODE: $000000B8 VOL: 0
; 0000 0089 
; 0000 008A 
; 0000 008B             if (OCR0 == 255) //플래그를 세우는 장소 정하기. 255에 도달하면 1로 바꿔주고, 그다음부터는 쭉 감소한다.
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 008C              {
; 0000 008D                  direction_flag = 1;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 008E              }
; 0000 008F 
; 0000 0090             if (OCR0 == 0)  //0에 도착하면 플래그를 0으로 바꿔주고 전등 옆칸으로 옮겨주기. 255까지 쭉 OCR을 올려준다.
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0091             {
; 0000 0092                 direction_flag = 0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0093 
; 0000 0094 
; 0000 0095                 led = led<<1;
;PCODE: $000000C4 VOL: 0
; 0000 0096                 led = led&0x0F;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0097 
; 0000 0098                 if(led == 0x08){
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0099                     led = 0x01;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 009A                 }
; 0000 009B 
; 0000 009C                 PORTA = PORTA |= led;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 009D             }
; 0000 009E         }
;PCODE: $000000D2 VOL: 0
; 0000 009F 
; 0000 00A0 
; 0000 00A1 }
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00A2 
; 0000 00A3 //   else if (button3_flag == 1)
; 0000 00A4 //   {
; 0000 00A5 //      stop = 1;
; 0000 00A6 //
; 0000 00A7 //   }
; 0000 00A8 
; 0000 00A9    else if (button1_flag == 0)
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00AA    {
; 0000 00AB       button3_flag = 1;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00AC    }
; 0000 00AD 
; 0000 00AE    else if (button2_flag == 0)
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00AF    {
; 0000 00B0       button3_flag = 1;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00B1    }
; 0000 00B2 
; 0000 00B3   if (button3_flag == 0)
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00B4    {
; 0000 00B5         stop = 0;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00B6    }
; 0000 00B7 
; 0000 00B8   else if(button3_flag == 1)
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00B9   {
; 0000 00BA         stop = 1;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00BB   }
; 0000 00BC 
; 0000 00BD }
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00BE 
; 0000 00BF }
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;
;
;void init(void){
; 0000 00C2 void init(void){
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00C3 // Input/Output Ports initialization
; 0000 00C4 // Port A initialization
; 0000 00C5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00C6 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 00C7 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00C8 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00C9 
; 0000 00CA // Port B initialization
; 0000 00CB // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00CC DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00CD // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00CE PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00CF 
; 0000 00D0 // Port C initialization
; 0000 00D1 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00D2 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00D3 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00D4 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00D5 
; 0000 00D6 // Port D initialization
; 0000 00D7 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00D8 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00D9 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00DA PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00DB 
; 0000 00DC // Port E initialization
; 0000 00DD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00DE DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00DF // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00E0 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00E1 
; 0000 00E2 // Port F initialization
; 0000 00E3 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00E4 DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00E5 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00E6 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00E7 
; 0000 00E8 // Port G initialization
; 0000 00E9 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00EA DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00EB // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00EC PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00ED 
; 0000 00EE // Timer/Counter 0 initialization
; 0000 00EF // Clock source: System Clock
; 0000 00F0 // Clock value: 2000.000 kHz
; 0000 00F1 // Mode: Fast PWM top=0xFF
; 0000 00F2 // OC0 output: Disconnected
; 0000 00F3 // Timer Period: 0.128 ms
; 0000 00F4 ASSR=0<<AS0;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00F5 TCCR0=(1<<WGM00) | (0<<COM01) | (0<<COM00) | (1<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00F6 TCNT0=0x00;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00F7 OCR0=0x00;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00F8 
; 0000 00F9 // Timer/Counter 1 initialization
; 0000 00FA // Clock source: System Clock
; 0000 00FB // Clock value: Timer1 Stopped
; 0000 00FC // Mode: Normal top=0xFFFF
; 0000 00FD // OC1A output: Disconnected
; 0000 00FE // OC1B output: Disconnected
; 0000 00FF // OC1C output: Disconnected
; 0000 0100 // Noise Canceler: Off
; 0000 0101 // Input Capture on Falling Edge
; 0000 0102 // Timer1 Overflow Interrupt: Off
; 0000 0103 // Input Capture Interrupt: Off
; 0000 0104 // Compare A Match Interrupt: Off
; 0000 0105 // Compare B Match Interrupt: Off
; 0000 0106 // Compare C Match Interrupt: Off
; 0000 0107 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0108 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0109 TCNT1H=0x00;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 010A TCNT1L=0x00;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 010B ICR1H=0x00;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 010C ICR1L=0x00;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 010D OCR1AH=0x00;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 010E OCR1AL=0x00;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 010F OCR1BH=0x00;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0110 OCR1BL=0x00;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0111 OCR1CH=0x00;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 0112 OCR1CL=0x00;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0113 
; 0000 0114 // Timer/Counter 2 initialization
; 0000 0115 // Clock source: System Clock
; 0000 0116 // Clock value: Timer2 Stopped
; 0000 0117 // Mode: Normal top=0xFF
; 0000 0118 // OC2 output: Disconnected
; 0000 0119 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 011A TCNT2=0x00;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 011B OCR2=0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 011C 
; 0000 011D // Timer/Counter 3 initialization
; 0000 011E // Clock source: System Clock
; 0000 011F // Clock value: Timer3 Stopped
; 0000 0120 // Mode: Normal top=0xFFFF
; 0000 0121 // OC3A output: Disconnected
; 0000 0122 // OC3B output: Disconnected
; 0000 0123 // OC3C output: Disconnected
; 0000 0124 // Noise Canceler: Off
; 0000 0125 // Input Capture on Falling Edge
; 0000 0126 // Timer3 Overflow Interrupt: Off
; 0000 0127 // Input Capture Interrupt: Off
; 0000 0128 // Compare A Match Interrupt: Off
; 0000 0129 // Compare B Match Interrupt: Off
; 0000 012A // Compare C Match Interrupt: Off
; 0000 012B TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 012C TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 012D TCNT3H=0x00;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 012E TCNT3L=0x00;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 012F ICR3H=0x00;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0130 ICR3L=0x00;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0131 OCR3AH=0x00;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0132 OCR3AL=0x00;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0133 OCR3BH=0x00;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0134 OCR3BL=0x00;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0135 OCR3CH=0x00;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0136 OCR3CL=0x00;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0137 
; 0000 0138 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0139 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<OCIE0) | (1<<TOIE0);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 013A ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 013B 
; 0000 013C // External Interrupt(s) initialization
; 0000 013D // INT0: Off
; 0000 013E // INT1: Off
; 0000 013F // INT2: Off
; 0000 0140 // INT3: Off
; 0000 0141 // INT4: Off
; 0000 0142 // INT5: Off
; 0000 0143 // INT6: Off
; 0000 0144 // INT7: Off
; 0000 0145 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0146 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0147 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0148 
; 0000 0149 // USART0 initialization
; 0000 014A // USART0 disabled
; 0000 014B UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 014C 
; 0000 014D // USART1 initialization
; 0000 014E // USART1 disabled
; 0000 014F UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0150 
; 0000 0151 // Analog Comparator initialization
; 0000 0152 // Analog Comparator: Off
; 0000 0153 // The Analog Comparator's positive input is
; 0000 0154 // connected to the AIN0 pin
; 0000 0155 // The Analog Comparator's negative input is
; 0000 0156 // connected to the AIN1 pin
; 0000 0157 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 0158 SFIOR=(0<<ACME);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0159 
; 0000 015A // ADC initialization
; 0000 015B // ADC disabled
; 0000 015C ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 015D 
; 0000 015E // SPI initialization
; 0000 015F // SPI disabled
; 0000 0160 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0161 
; 0000 0162 // TWI initialization
; 0000 0163 // TWI disabled
; 0000 0164 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 0165 
; 0000 0166 // Global enable interrupts
; 0000 0167 }
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
